<computer_extension_attribute>
<id>0</id>
<name>800-53r5_moderate - os_system_read_only</name>
<description>The System volume _MUST_ be mounted as read-only in order to ensure that configurations critical to the integrity of the macOS have not been compromised. System Integrity Protection (SIP) will prevent the system volume from being mounted as writable.

NOTE: The system volume is read only by default in macOS.
</description>
<data_type>String</data_type>
<input_type>
<type>script</type>
<platform>Mac</platform>
<script>#!/bin/zsh        &#13;
#####----- Rule: os_system_read_only -----#####&#13;
## Addresses the following NIST 800-53 controls: &#13;
# * MA-4(1)&#13;
# * SC-34&#13;
# * SI-7&#13;
rule_arch=""&#13;
plb="/usr/libexec/PlistBuddy"&#13;
# setup files&#13;
audit_plist_managed="/Library/Managed Preferences/org.800-53r5_moderate.audit.plist"&#13;
&#13;
if [[ ! -e "$audit_plist_managed" ]];then&#13;
    audit_plist_managed="/Library/Preferences/org.800-53r5_moderate.audit.plist"&#13;
fi&#13;
&#13;
audit_plist="/Library/Preferences/org.800-53r5_moderate.audit.plist"&#13;
audit_log="/Library/Logs/800-53r5_moderate_baseline.log"&#13;
if [[ "$arch" == "$rule_arch" ]] || [[ -z "$rule_arch" ]]; then&#13;
    #echo 'Running the command to check the settings for: os_system_read_only ...' &#13;
    unset result_value&#13;
    result_value=$(/usr/sbin/system_profiler SPStorageDataType | /usr/bin/awk '/Mount Point: \/$/{x=NR+2}(NR==x){print $2}')&#13;
    # expected result {'string': 'No'}&#13;
&#13;
    # check to see if rule is exempt&#13;
    unset exempt&#13;
    unset exempt_reason&#13;
    exempt=$($plb -c "print os_system_read_only:exempt" "$audit_plist_managed" 2&gt;/dev/null)&#13;
    exempt_reason=$($plb -c "print os_system_read_only:exempt_reason" "$audit_plist_managed" 2&gt;/dev/null)&#13;
&#13;
    if [[ ! $exempt == "true" ]] || [[ -z $exempt ]];then&#13;
        if [[ $result_value == "No" ]]; then&#13;
            echo "&lt;result&gt;os_system_read_only passed (Result: $result_value, Expected: "{'string': 'No'}")&lt;/result&gt;" &#13;
            &#13;
        else&#13;
            echo "&lt;result&gt;os_system_read_only failed (Result: $result_value, Expected: "{'string': 'No'}")&lt;/result&gt;" &#13;
            &#13;
        fi&#13;
    elif [[ ! -z "$exempt_reason" ]];then&#13;
        echo "&lt;result&gt;os_system_read_only has an exemption (Reason: "$exempt_reason")&lt;/result&gt;" &#13;
        &#13;
        /bin/sleep 1&#13;
    fi&#13;
else&#13;
    echo "&lt;result&gt;os_system_read_only does not apply to this architechture&lt;/result&gt;" &#13;
fi</script>
</input_type>
<inventory_display>Extension Attributes</inventory_display>
<recon_display>Extension Attributes</recon_display>
</computer_extension_attribute>
            