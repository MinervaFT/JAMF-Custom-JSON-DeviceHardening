<computer_extension_attribute>
<id>0</id>
<name>800-53r5_moderate - os_home_folders_secure</name>
<description>The system _MUST_ be configured to prevent access to other users' home folders.

The default behavior of macOS is to allow all valid users access to the the top level of every other user's home folder while restricting access only to the Apple default folders within. 
</description>
<data_type>String</data_type>
<input_type>
<type>script</type>
<platform>Mac</platform>
<script>#!/bin/zsh        &#13;
#####----- Rule: os_home_folders_secure -----#####&#13;
## Addresses the following NIST 800-53 controls: &#13;
# * AC-6&#13;
rule_arch=""&#13;
plb="/usr/libexec/PlistBuddy"&#13;
# setup files&#13;
audit_plist_managed="/Library/Managed Preferences/org.800-53r5_moderate.audit.plist"&#13;
&#13;
if [[ ! -e "$audit_plist_managed" ]];then&#13;
    audit_plist_managed="/Library/Preferences/org.800-53r5_moderate.audit.plist"&#13;
fi&#13;
&#13;
audit_plist="/Library/Preferences/org.800-53r5_moderate.audit.plist"&#13;
audit_log="/Library/Logs/800-53r5_moderate_baseline.log"&#13;
if [[ "$arch" == "$rule_arch" ]] || [[ -z "$rule_arch" ]]; then&#13;
    #echo 'Running the command to check the settings for: os_home_folders_secure ...' &#13;
    unset result_value&#13;
    result_value=$(/usr/bin/find /System/Volumes/Data/Users -mindepth 1 -maxdepth 1 -type d -perm -1 | /usr/bin/grep -v "Shared" | /usr/bin/grep -v "Guest" | /usr/bin/wc -l | /usr/bin/xargs)&#13;
    # expected result {'integer': 0}&#13;
&#13;
    # check to see if rule is exempt&#13;
    unset exempt&#13;
    unset exempt_reason&#13;
    exempt=$($plb -c "print os_home_folders_secure:exempt" "$audit_plist_managed" 2&gt;/dev/null)&#13;
    exempt_reason=$($plb -c "print os_home_folders_secure:exempt_reason" "$audit_plist_managed" 2&gt;/dev/null)&#13;
&#13;
    if [[ ! $exempt == "true" ]] || [[ -z $exempt ]];then&#13;
        if [[ $result_value == "0" ]]; then&#13;
            echo "&lt;result&gt;os_home_folders_secure passed (Result: $result_value, Expected: "{'integer': 0}")&lt;/result&gt;" &#13;
            &#13;
        else&#13;
            echo "&lt;result&gt;os_home_folders_secure failed (Result: $result_value, Expected: "{'integer': 0}")&lt;/result&gt;" &#13;
            &#13;
        fi&#13;
    elif [[ ! -z "$exempt_reason" ]];then&#13;
        echo "&lt;result&gt;os_home_folders_secure has an exemption (Reason: "$exempt_reason")&lt;/result&gt;" &#13;
        &#13;
        /bin/sleep 1&#13;
    fi&#13;
else&#13;
    echo "&lt;result&gt;os_home_folders_secure does not apply to this architechture&lt;/result&gt;" &#13;
fi</script>
</input_type>
<inventory_display>Extension Attributes</inventory_display>
<recon_display>Extension Attributes</recon_display>
</computer_extension_attribute>
            