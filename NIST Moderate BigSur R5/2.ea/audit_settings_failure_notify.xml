<computer_extension_attribute>
<id>0</id>
<name>800-53r5_moderate - audit_settings_failure_notify</name>
<description>The audit service _MUST_ be configured to immediately print messages to the console or email administrator users when an auditing failure occurs. 

It is critical for the appropriate personnel to be made aware immediately if a system is at risk of failing to process audit logs as required. Without a real-time alert, security personnel may be unaware of a potentially harmful failure in the auditing system's capability, and system operation may be adversely affected. 
</description>
<data_type>String</data_type>
<input_type>
<type>script</type>
<platform>Mac</platform>
<script>#!/bin/zsh        &#13;
#####----- Rule: audit_settings_failure_notify -----#####&#13;
## Addresses the following NIST 800-53 controls: &#13;
# * AU-5, AU-5(2)&#13;
rule_arch=""&#13;
plb="/usr/libexec/PlistBuddy"&#13;
# setup files&#13;
audit_plist_managed="/Library/Managed Preferences/org.800-53r5_moderate.audit.plist"&#13;
&#13;
if [[ ! -e "$audit_plist_managed" ]];then&#13;
    audit_plist_managed="/Library/Preferences/org.800-53r5_moderate.audit.plist"&#13;
fi&#13;
&#13;
audit_plist="/Library/Preferences/org.800-53r5_moderate.audit.plist"&#13;
audit_log="/Library/Logs/800-53r5_moderate_baseline.log"&#13;
if [[ "$arch" == "$rule_arch" ]] || [[ -z "$rule_arch" ]]; then&#13;
    #echo 'Running the command to check the settings for: audit_settings_failure_notify ...' &#13;
    unset result_value&#13;
    result_value=$(/usr/bin/grep -c "logger -s -p" /etc/security/audit_warn)&#13;
    # expected result {'integer': 1}&#13;
&#13;
    # check to see if rule is exempt&#13;
    unset exempt&#13;
    unset exempt_reason&#13;
    exempt=$($plb -c "print audit_settings_failure_notify:exempt" "$audit_plist_managed" 2&gt;/dev/null)&#13;
    exempt_reason=$($plb -c "print audit_settings_failure_notify:exempt_reason" "$audit_plist_managed" 2&gt;/dev/null)&#13;
&#13;
    if [[ ! $exempt == "true" ]] || [[ -z $exempt ]];then&#13;
        if [[ $result_value == "1" ]]; then&#13;
            echo "&lt;result&gt;audit_settings_failure_notify passed (Result: $result_value, Expected: "{'integer': 1}")&lt;/result&gt;" &#13;
            &#13;
        else&#13;
            echo "&lt;result&gt;audit_settings_failure_notify failed (Result: $result_value, Expected: "{'integer': 1}")&lt;/result&gt;" &#13;
            &#13;
        fi&#13;
    elif [[ ! -z "$exempt_reason" ]];then&#13;
        echo "&lt;result&gt;audit_settings_failure_notify has an exemption (Reason: "$exempt_reason")&lt;/result&gt;" &#13;
        &#13;
        /bin/sleep 1&#13;
    fi&#13;
else&#13;
    echo "&lt;result&gt;audit_settings_failure_notify does not apply to this architechture&lt;/result&gt;" &#13;
fi</script>
</input_type>
<inventory_display>Extension Attributes</inventory_display>
<recon_display>Extension Attributes</recon_display>
</computer_extension_attribute>
            