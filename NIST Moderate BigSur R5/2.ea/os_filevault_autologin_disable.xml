<computer_extension_attribute>
<id>0</id>
<name>800-53r5_moderate - os_filevault_autologin_disable</name>
<description>If FileVault is enabled, automatic login _MUST_ be disabled, so that both FileVault and login window authentication are required.

The default behavior of macOS when FileVault is enabled is to automatically log in to the computer once successfully passing your FileVault credentials. 

NOTE: DisableFDEAutoLogin does not have to be set on Apple Silicon based macOS systems that are smartcard enforced as smartcards are available at pre-boot.
</description>
<data_type>String</data_type>
<input_type>
<type>script</type>
<platform>Mac</platform>
<script>#!/bin/zsh        &#13;
#####----- Rule: os_filevault_autologin_disable -----#####&#13;
## Addresses the following NIST 800-53 controls: &#13;
# * AC-2(11)&#13;
# * AC-3&#13;
# * IA-5(13)&#13;
rule_arch=""&#13;
plb="/usr/libexec/PlistBuddy"&#13;
# setup files&#13;
audit_plist_managed="/Library/Managed Preferences/org.800-53r5_moderate.audit.plist"&#13;
&#13;
if [[ ! -e "$audit_plist_managed" ]];then&#13;
    audit_plist_managed="/Library/Preferences/org.800-53r5_moderate.audit.plist"&#13;
fi&#13;
&#13;
audit_plist="/Library/Preferences/org.800-53r5_moderate.audit.plist"&#13;
audit_log="/Library/Logs/800-53r5_moderate_baseline.log"&#13;
if [[ "$arch" == "$rule_arch" ]] || [[ -z "$rule_arch" ]]; then&#13;
    #echo 'Running the command to check the settings for: os_filevault_autologin_disable ...' &#13;
    unset result_value&#13;
    result_value=$(/usr/bin/osascript -l JavaScript &lt;&lt; EOS&#13;
$.NSUserDefaults.alloc.initWithSuiteName('com.apple.loginwindow')\&#13;
.objectForKey('DisableFDEAutoLogin').js&#13;
EOS)&#13;
    # expected result {'string': 'true'}&#13;
&#13;
    # check to see if rule is exempt&#13;
    unset exempt&#13;
    unset exempt_reason&#13;
    exempt=$($plb -c "print os_filevault_autologin_disable:exempt" "$audit_plist_managed" 2&gt;/dev/null)&#13;
    exempt_reason=$($plb -c "print os_filevault_autologin_disable:exempt_reason" "$audit_plist_managed" 2&gt;/dev/null)&#13;
&#13;
    if [[ ! $exempt == "true" ]] || [[ -z $exempt ]];then&#13;
        if [[ $result_value == "true" ]]; then&#13;
            echo "&lt;result&gt;os_filevault_autologin_disable passed (Result: $result_value, Expected: "{'string': 'true'}")&lt;/result&gt;" &#13;
            &#13;
        else&#13;
            echo "&lt;result&gt;os_filevault_autologin_disable failed (Result: $result_value, Expected: "{'string': 'true'}")&lt;/result&gt;" &#13;
            &#13;
        fi&#13;
    elif [[ ! -z "$exempt_reason" ]];then&#13;
        echo "&lt;result&gt;os_filevault_autologin_disable has an exemption (Reason: "$exempt_reason")&lt;/result&gt;" &#13;
        &#13;
        /bin/sleep 1&#13;
    fi&#13;
else&#13;
    echo "&lt;result&gt;os_filevault_autologin_disable does not apply to this architechture&lt;/result&gt;" &#13;
fi</script>
</input_type>
<inventory_display>Extension Attributes</inventory_display>
<recon_display>Extension Attributes</recon_display>
</computer_extension_attribute>
            