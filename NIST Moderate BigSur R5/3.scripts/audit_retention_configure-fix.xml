<script>
<name>800-53r5_moderate - audit_retention_configure - Fix</name>
 <category>800-53r5_moderate - auditing</category>
<script_contents>#!/bin/zsh&#13;
#####----- Rule: audit_retention_configure -----#####&#13;
## Addresses the following NIST 800-53 controls: &#13;
# * AU-11&#13;
# * AU-4&#13;
&#13;
plb="/usr/libexec/PlistBuddy"&#13;
# setup files&#13;
audit_plist_managed="/Library/Managed Preferences/org.0.audit.plist"&#13;
&#13;
if [[ ! -e "$audit_plist_managed" ]];then&#13;
    audit_plist_managed="/Library/Preferences/org.0.audit.plist"&#13;
fi&#13;
&#13;
audit_plist="/Library/Preferences/org.0.audit.plist"&#13;
audit_log="/Library/Logs/0_baseline.log"&#13;
&#13;
# check to see if rule is exempt&#13;
unset exempt&#13;
unset exempt_reason&#13;
exempt=$($plb -c "print audit_retention_configure:exempt" "$audit_plist_managed" 2&gt;/dev/null)&#13;
exempt_reason=$($plb -c "print audit_retention_configure:exempt_reason" "$audit_plist_managed" 2&gt;/dev/null)&#13;
&#13;
audit_retention_configure_audit_score=$($plb -c "print audit_retention_configure:finding" $audit_plist)&#13;
if [[ ! $exempt == "true" ]] || [[ -z $exempt ]];then&#13;
    if [[ $audit_retention_configure_audit_score == "true" ]]; then&#13;
            echo 'Running the command to configure the settings for: audit_retention_configure ...' &#13;
            /usr/bin/sed -i.bak 's/^expire-after.*/expire-after:$ODV/' /etc/security/audit_control; /usr/sbin/audit -s&#13;
    else&#13;
        echo 'Settings for: audit_retention_configure already configured, continuing...' &#13;
    fi&#13;
elif [[ ! -z "$exempt_reason" ]];then&#13;
    echo "$(date -u) audit_retention_configure has an exemption (Reason: "$exempt_reason")" &#13;
fi&#13;
    </script_contents>
</script>